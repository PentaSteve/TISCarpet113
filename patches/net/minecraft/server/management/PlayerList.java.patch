--- a/net/minecraft/server/management/PlayerList.java
+++ b/net/minecraft/server/management/PlayerList.java
@@ -1,17 +1,18 @@
 package net.minecraft.server.management;
 
+import carpet.CarpetServer;
+import carpet.patches.EntityPlayerMPFake;
+import carpet.patches.NetHandlerPlayServerFake;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.google.common.collect.Sets;
 import com.mojang.authlib.GameProfile;
+import com.mojang.datafixers.util.Pair;
 import io.netty.buffer.Unpooled;
 import java.io.File;
 import java.net.SocketAddress;
 import java.text.SimpleDateFormat;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-import java.util.UUID;
+import java.util.*;
 import javax.annotation.Nullable;
 import net.minecraft.advancements.CriteriaTriggers;
 import net.minecraft.advancements.PlayerAdvancements;
@@ -49,6 +50,7 @@
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.stats.StatList;
 import net.minecraft.stats.StatisticsManagerServer;
+import net.minecraft.util.ResourceLocation;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.MathHelper;
 import net.minecraft.util.text.ChatType;
@@ -123,7 +125,9 @@
         WorldServer worldserver = this.server.getWorld(playerIn.dimension);
         WorldInfo worldinfo = worldserver.getWorldInfo();
         this.setPlayerGameTypeBasedOnOther(playerIn, (EntityPlayerMP)null, worldserver);
-        NetHandlerPlayServer nethandlerplayserver = new NetHandlerPlayServer(this.server, netManager, playerIn);
+        //custom manager for fake players [CM]
+        //NetHandlerPlayServer nethandlerplayserver = new NetHandlerPlayServer(this.server, netManager, playerIn);
+        NetHandlerPlayServer nethandlerplayserver = (playerIn instanceof EntityPlayerMPFake)?(new NetHandlerPlayServerFake(this.server, netManager, playerIn)):(new NetHandlerPlayServer(this.server, netManager, playerIn));
         nethandlerplayserver.sendPacket(new SPacketJoinGame(playerIn.getEntityId(), playerIn.interactionManager.getGameType(), worldinfo.isHardcore(), worldserver.dimension.getType(), worldserver.getDifficulty(), this.getMaxPlayers(), worldinfo.getGenerator(), worldserver.getGameRules().getBoolean("reducedDebugInfo")));
         nethandlerplayserver.sendPacket(new SPacketCustomPayload(SPacketCustomPayload.BRAND, (new PacketBuffer(Unpooled.buffer())).writeString(this.getServer().getServerModName())));
         nethandlerplayserver.sendPacket(new SPacketServerDifficulty(worldinfo.getDifficulty(), worldinfo.isDifficultyLocked()));
@@ -201,6 +205,9 @@
         }
 
         playerIn.addSelfToInternalCraftingInventory();
+
+        // Carpet protocol
+        CarpetServer.onPlayerLoggedIn(playerIn);
     }
 
     protected void sendScoreboard(ServerScoreboard scoreboardIn, EntityPlayerMP playerIn)
@@ -306,6 +313,10 @@
         {
             nbttagcompound1 = this.playerDataManager.readPlayerData(playerIn);
         }
+        if (playerIn instanceof EntityPlayerMPFake)
+        {
+            ((EntityPlayerMPFake) playerIn).fixStartingPosition.run();
+        }
 
         return nbttagcompound1;
     }
@@ -454,6 +465,12 @@
 
         for (EntityPlayerMP entityplayermp1 : list)
         {
+            //CM disconnect shadowed players
+            if(entityplayermp1 instanceof EntityPlayerMPFake)
+            {
+                entityplayermp1.onKillCommand();
+                continue;
+            }
             entityplayermp1.connection.disconnect(new TextComponentTranslation("multiplayer.disconnect.duplicate_login"));
         }
 
